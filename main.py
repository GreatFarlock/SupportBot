import os
import logging
from contextlib import asynccontextmanager
from fastapi import FastAPI, Request, Response
from http import HTTPStatus
from telegram import Update, ForumTopic
from telegram.ext import (
    Application,
    CommandHandler,
    MessageHandler,
    ContextTypes,
    filters,
)

BOT_TOKEN = os.environ["BOT_TOKEN"]
GROUP_ID = int(os.environ["GROUP_ID"])
WEBHOOK_URL = os.environ["WEBHOOK_URL"]

logging.basicConfig(level=logging.INFO)

app_ptb = (
    Application.builder()
    .token(BOT_TOKEN)
    .updater(None)
    .build()
)

user_threads = {}

async def pre_start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    if update.message.text != "/start":
        await update.message.reply_text(
            "‚ùóÔ∏è–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –±–æ—Ç–∞ –ø–æ–¥–¥–µ—Ä–∂–∫–∏!\n\n"
            "üí¨–ß–µ—Ä–µ–∑ –Ω–µ–≥–æ –≤—ã –º–æ–∂–µ—Ç–µ —Å–≤—è–∑–∞—Ç—å—Å—è —Å –∫–æ–º–∞–Ω–¥–æ–π VineSoft –∏ –º–æ–¥–µ—Ä–∞—Ü–∏–µ–π —á–∞—Ç–∞!"
        )

async def start_cmd(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text("üí¨–ù–∞–ø–∏—à–∏—Ç–µ —Å–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –∏ –≤–∞–º –æ—Ç–≤–µ—Ç—è—Ç –≤ –±–ª–∏–∂–∞–π—à–µ–µ –≤—Ä–µ–º—è!")

async def handle_msg(update: Update, context: ContextTypes.DEFAULT_TYPE):
    user = update.effective_user
    text = update.message.text

    if user.id not in user_threads:
        topic = await context.bot.create_forum_topic(
            chat_id=GROUP_ID,
            name=f"{user.first_name or 'User'} ({user.id})"
        )
        user_threads[user.id] = topic.message_thread_id

    thread = user_threads[user.id]
    await context.bot.send_message(
        chat_id=GROUP_ID,
        message_thread_id=thread,
        text=f"üì® –°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç @{user.username or user.first_name}:\n\n{text}"
    )
    await update.message.reply_text(
        "‚ú®–°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ!\n\n–ñ–¥–∏—Ç–µ –æ—Ç–≤–µ—Ç–∞ –≤ –±–ª–∏–∂–∞–π—à–µ–µ –≤—Ä–µ–º—è."
    )

app_ptb.add_handler(MessageHandler(filters.TEXT & ~filters.COMMAND, pre_start), group=0)
app_ptb.add_handler(CommandHandler("start", start_cmd))
app_ptb.add_handler(MessageHandler(filters.TEXT & ~filters.COMMAND, handle_msg), group=1)

fast = FastAPI()  # üî• –û–ë–Ø–ó–ê–¢–ï–õ–¨–ù–û –î–û–õ–ñ–ù–ê –ë–´–¢–¨ –≠–¢–ê –ü–ï–†–ï–ú–ï–ù–ù–ê–Ø

@asynccontextmanager
async def lifespan(app: FastAPI):
    await app_ptb.bot.setWebhook(WEBHOOK_URL)
    async with app_ptb:
        await app_ptb.start()
        yield
        await app_ptb.stop()

fast.lifespan = lifespan

@fast.post("/{token}")
async def telegram_webhook(request: Request, token: str):
    if token != BOT_TOKEN.split(":")[0]:
        return Response(status_code=HTTPStatus.FORBIDDEN)
    data = await request.json()
    update = Update.de_json(data, app_ptb.bot)
    await app_ptb.process_update(update)
    return Response(status_code=HTTPStatus.OK)

if __name__ == "__main__":
    import uvicorn
    uvicorn.run(fast, host="0.0.0.0", port=int(os.environ.get("PORT", 8000)))
